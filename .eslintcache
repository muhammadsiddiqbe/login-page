[{"/home/world/Desktop/react/my-2/src/App.js":"1","/home/world/Documents/react-starter/src/index.js":"2","/home/world/Documents/react-starter/src/App.js":"3","/home/world/Desktop/react/login-form/src/index.js":"4","/home/world/Desktop/react/login-form/src/App.js":"5","/home/world/Desktop/react/login-form/src/components/login-form.jsx":"6"},{"size":64,"mtime":1608052755592,"results":"7","hashOfConfig":"8"},{"size":218,"mtime":1608052685124,"results":"9","hashOfConfig":"10"},{"size":1814,"mtime":1608107176956,"results":"11","hashOfConfig":"10"},{"size":218,"mtime":1608052685124,"results":"12","hashOfConfig":"13"},{"size":122,"mtime":1608119408401,"results":"14","hashOfConfig":"13"},{"size":1412,"mtime":1608138996138,"results":"15","hashOfConfig":"13"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rn4hvo",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1stziof",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gss3e5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/home/world/Desktop/react/my-2/src/App.js",[],"/home/world/Documents/react-starter/src/index.js",[],"/home/world/Documents/react-starter/src/App.js",[],"/home/world/Desktop/react/login-form/src/index.js",[],["30","31"],"/home/world/Desktop/react/login-form/src/App.js",[],"/home/world/Desktop/react/login-form/src/components/login-form.jsx",["32"],"import {useState, useRef} from 'react'\n\n\nfunction LoginForm() {\n  const userLogin = 'Muhammad'\n  const userPassword = '571632'\n  const [] = useState(null)\n\n  const takeLoginRef = useRef(null)\n  const takePasswordRef = useRef(null)\n  const btnRef = useRef(null)\n\n  function formSubmit() {\n    if (takeLoginRef.current.value === '' || takePasswordRef.current.value === '') {\n      alert('Please fill the field')\n      return\n    }\n\n    if (takeLoginRef.current.value === userLogin && takePasswordRef.current.value === userPassword) {\n      alert('Success')\n    } else {\n      alert('Wrong password or login')\n      return false\n    }\n    takeLoginRef.current.value = null\n    takePasswordRef.current.value = null\n  }\n\n  return(\n    <div>\n      <h3>Sign in</h3>\n      <form onSubmit={evt => evt.preventDefault()} className=\"login-form\" action=\"https:echo.htmlacademy.ru\" method=\"POST\">\n\n        <label htmlFor=\"\">\n          <input ref={takeLoginRef} className=\"login-input\" type=\"text\" name=\"userLogin\" placeholder={'Login'} minLength={4} required/>\n        </label>\n        <label htmlFor=\"\">\n          <input ref={takePasswordRef} className=\"password-input\" type=\"password\" name=\"userPassword\" placeholder={'Your password'} minLength={6} required/>\n        </label>\n\n        <button ref={btnRef} onClick={evt => formSubmit()} type=\"submit\">Submit</button>\n      </form>\n    </div>\n\n  )\n}\n\nexport default LoginForm",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":7,"column":9,"nodeType":"39","messageId":"40","endLine":7,"endColumn":11},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","no-global-assign","no-unsafe-negation"]